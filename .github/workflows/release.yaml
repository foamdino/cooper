name: Cooper Release

on:
  push:
    tags:
      - 'v*.*.*'

env:
  BUILD_TYPE: release

jobs:
  validate-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for comprehensive changelog
        
    - name: Compile nob build system
      run: cc nob.c -o nob
      
    - name: Build cooper project
      run: ./nob
      
    - name: Run tests before release
      run: ./build/test_cooper
      
    - name: Verify release artifacts
      run: |
        echo "Checking build artifacts..."
        ls -la ./build/
        
        # Verify CLI executable
        test -f ./build/cli
        test -x ./build/cli
        echo "‚úì CLI executable found and is executable"
        
        # Verify shared library
        test -f ./build/libcooper.so
        file ./build/libcooper.so | grep -q "shared object"
        echo "‚úì libcooper.so found and is valid shared library"
        
        # Get artifact sizes for release notes
        CLI_SIZE=$(stat -c%s ./build/cli)
        LIB_SIZE=$(stat -c%s ./build/libcooper.so)
        echo "CLI_SIZE=$CLI_SIZE" >> $GITHUB_ENV
        echo "LIB_SIZE=$LIB_SIZE" >> $GITHUB_ENV
        
    - name: Generate comprehensive changelog
      id: changelog
      run: |
        CURRENT_TAG=${GITHUB_REF#refs/tags/}
        PREVIOUS_TAG=$(git tag --sort=-version:refname | grep -v "^$CURRENT_TAG$" | head -1)
        
        echo "Generating changelog from $PREVIOUS_TAG to $CURRENT_TAG"
        
        # Create changelog with categorized commits
        {
          echo "## üöÄ Changes in $CURRENT_TAG"
          echo ""
          
          if [ -n "$PREVIOUS_TAG" ]; then
            # Features
            FEATURES=$(git log --pretty=format:"- %s (%h)" $PREVIOUS_TAG..$CURRENT_TAG | grep -i "feat\|add\|new" || true)
            if [ -n "$FEATURES" ]; then
              echo "### ‚ú® New Features"
              echo "$FEATURES"
              echo ""
            fi
            
            # Fixes
            FIXES=$(git log --pretty=format:"- %s (%h)" $PREVIOUS_TAG..$CURRENT_TAG | grep -i "fix\|bug\|patch" || true)
            if [ -n "$FIXES" ]; then
              echo "### üêõ Bug Fixes"
              echo "$FIXES"
              echo ""
            fi
            
            # Other changes
            OTHER=$(git log --pretty=format:"- %s (%h)" $PREVIOUS_TAG..$CURRENT_TAG | grep -vi "feat\|add\|new\|fix\|bug\|patch" || true)
            if [ -n "$OTHER" ]; then
              echo "### üîß Other Changes"
              echo "$OTHER"
              echo ""
            fi
            
            echo "**Full Changelog**: https://github.com/${{ github.repository }}/compare/$PREVIOUS_TAG...$CURRENT_TAG"
          else
            echo "### üéâ Initial Release"
            git log --pretty=format:"- %s (%h)" | head -10
          fi
        } > CHANGELOG.md
        
        # Set multiline output
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        cat CHANGELOG.md >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: ${{ github.ref_name }}
        body: |
          ${{ steps.changelog.outputs.changelog }}
          
          ## üì¶ Release Assets
          
          | File | Size | Description |
          |------|------|-------------|
          | `cli` | ${{ env.CLI_SIZE }} bytes | Cooper command-line monitoring tool |
          | `libcooper.so` | ${{ env.LIB_SIZE }} bytes | Cooper Java agent shared library |
          
          ## üèóÔ∏è Build Information
          - **Platform**: Linux x86_64
          - **Compiler**: GCC (default)
          - **Built**: ${{ github.run_id }} on ${{ github.run_attempt }}
          - **Commit**: [`${{ github.sha }}`](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
          
          <!-- TODO: Add ARM64 builds for broader compatibility -->
          <!-- TODO: Add GPG signatures for artifact verification -->
          <!-- TODO: Add SHA256 checksums for integrity validation -->
        draft: false
        prerelease: false
        
    - name: Upload cli executable
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/cli
        asset_name: cli
        asset_content_type: application/octet-stream
        
    - name: Upload cooper shared library
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/libcooper.so
        asset_name: libcooper.so
        asset_content_type: application/octet-stream